---

- name: Generate the root password for ldap
  shell: slappasswd -s {{ openldap_root_password }}
  register: openldap_rootpw_sha

- name:  Add olcRootPW to config.ldif
    ldap_attr:
      dn: olcDatabase={0}config,cn=config
      name: olcRootPW
      values: "{{ openldap_rootpw_sha.stdout }}"
      state: present

- name: Change olcSuffix value of monitor.ldif
  ldap_attr:
    dn: olcDatabase={1}monitor,cn=config
    name: olcAccess
    values:
      - >-
        {0}to *
        by dn.base="gidNumber=0+uidNumber=0,cn=peercred,cn=external,cn=auth" read 
        by dn.base= "{{ openldap_rootdn }}" read 
        by * none
    state: exact

- name: Change olcSuffix and olcRootDN values of hdb.ldif
  ldap_attr:
    dn: olcDatabase={2}hdb,cn=config
    name: "{{ item.key }}"
    values: "{{ item.value }}"
    state: exact
  with_dict:
    olcSuffix: "{{ openldap_basedn }}"
    olcRootDN: "{{ openldap_rootdn }}"

- name: Add olcRootPW to hdb.ldif
  ldap_attr:
    dn: olcDatabase={2}hdb,cn=config
    name: olcRootPW
    values: "{{ openldap_rootpw_sha.stdout }}"
    state: present

- name: Add olcAccess to hdb.ldif
  ldap_attr:
    dn: olcDatabase={2}hdb,cn=config
    name: olcAccess
    values:
      - >-
        {0}to attrs=userPassword,shadowLastChange
        by dn= "{{ openldap_rootdn }}" write
        by anonymous auth
        by self write
        by * none
      - >-
        {1}to dn.base= "{{ openldap_basedn }}"
        by dn= "{{ openldap_rootdn }}" write
        by * read
      - >-
        {2}to *
        by dn= "{{ openldap_rootdn }}" write
        by * read
    state: present

- name: Import schemas
  command: "ldapadd -Y EXTERNAL -H ldapi:/// -f /etc/openldap/schema/{{ item }}"
  with_items:
    - cosine.ldif
    - nis.ldif
    - inetorgperson.ldif

- name: Copy basedomain.ldif file
  template:
    src: basedomain.ldif.j2
    dest: /etc/openldap/basedomain.ldif

- name: Create dc and ou
  shell: ldapadd -x -D "{{ openldap_rootdn }}" -w "{{ openldap_root_password }}" -f /etc/openldap/basedomain.ldif

- name: Copy user_group.ldif file
  template:
    src: user_group.ldif.j2
    dest: /etc/openldap/user_group.ldif
    
- name: Create group and user
  shell: ldapadd -x -D "{{ openldap_rootdn }}" -w "{{ openldap_root_password }}" -f /etc/openldap/user_group.ldif

